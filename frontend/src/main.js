import './style.css';

// –ò–º–ø–æ—Ä—Ç Wails runtime
import { GetCurrentDirectory, CheckProxiFyreExists, GetConfig, SaveConfig, RunProxiFyre, StopProxiFyre, DownloadProxiFyre, InstallService, UninstallService, StartService, StopService, GetServiceStatus, GetTimestamp } from '../wailsjs/go/main/App';

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let currentConfig = null;
let currentApps = [];
let isInitialized = false; // –§–ª–∞–≥ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
function getErrorMessage(error) {
    let errorMessage = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞';
    if (error && typeof error === 'object') {
        if (error.message) {
            errorMessage = error.message;
        } else if (error.error) {
            errorMessage = error.error;
        } else if (error.toString) {
            errorMessage = error.toString();
        }
    } else if (error) {
        errorMessage = String(error);
    }
    return errorMessage;
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', function() {
    initializeApp();
    setupEventListeners();
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
async function initializeApp() {
    if (isInitialized) {
        return; // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    }
    
    try {
        logToConsole('üöÄ ProxiFyre Configuration Editor –∑–∞–ø—É—â–µ–Ω');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        const currentDir = await GetCurrentDirectory();
        console.log('–¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è:', currentDir);
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        await loadCurrentConfig();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å ProxiFyre
        await checkProxiFyreStatus();
        
        isInitialized = true;
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
        logToConsole(`‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: ${error.message}`);
    }
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
function setupEventListeners() {
    console.log('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π...');
    
    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
    document.querySelectorAll('.tab-button').forEach(button => {
        button.addEventListener('click', function() {
            const tabName = this.getAttribute('data-tab');
            switchTab(tabName);
        });
    });

    // –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    const saveBtn = document.getElementById('saveBtn');
    const refreshBtn = document.getElementById('refreshBtn');
    
    if (saveBtn) {
        saveBtn.addEventListener('click', saveConfiguration);
        console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å" –¥–æ–±–∞–≤–ª–µ–Ω');
    } else {
        console.error('‚ùå –ö–Ω–æ–ø–∫–∞ "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }
    
    if (refreshBtn) {
        refreshBtn.addEventListener('click', loadCurrentConfig);
        console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û–±–Ω–æ–≤–∏—Ç—å" –¥–æ–±–∞–≤–ª–µ–Ω');
    } else {
        console.error('‚ùå –ö–Ω–æ–ø–∫–∞ "–û–±–Ω–æ–≤–∏—Ç—å" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }

    // –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º
    const runBtn = document.getElementById('runBtn');
    const stopBtn = document.getElementById('stopBtn');
    const downloadBtn = document.getElementById('downloadBtn');
    
    if (runBtn) {
        runBtn.addEventListener('click', runProxiFyre);
        console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ó–∞–ø—É—Å—Ç–∏—Ç—å" –¥–æ–±–∞–≤–ª–µ–Ω');
    } else {
        console.error('‚ùå –ö–Ω–æ–ø–∫–∞ "–ó–∞–ø—É—Å—Ç–∏—Ç—å" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }
    
    if (stopBtn) {
        stopBtn.addEventListener('click', stopProxiFyre);
        console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å" –¥–æ–±–∞–≤–ª–µ–Ω');
    } else {
        console.error('‚ùå –ö–Ω–æ–ø–∫–∞ "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }
    
    if (downloadBtn) {
        downloadBtn.addEventListener('click', downloadProxiFyre);
        console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–°–∫–∞—á–∞—Ç—å" –¥–æ–±–∞–≤–ª–µ–Ω');
    } else {
        console.error('‚ùå –ö–Ω–æ–ø–∫–∞ "–°–∫–∞—á–∞—Ç—å" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }

    // –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏
    const addAppBtn = document.getElementById('addAppBtn');
    
    if (addAppBtn) {
        addAppBtn.addEventListener('click', addApplication);
        console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å" –¥–æ–±–∞–≤–ª–µ–Ω');
    } else {
        console.error('‚ùå –ö–Ω–æ–ø–∫–∞ "–î–æ–±–∞–≤–∏—Ç—å" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }

    // –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Å–æ–ª—å—é
    const clearConsoleBtn = document.getElementById('clearConsoleBtn');
    const copyConsoleBtn = document.getElementById('copyConsoleBtn');
    
    if (clearConsoleBtn) {
        clearConsoleBtn.addEventListener('click', clearConsole);
        console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û—á–∏—Å—Ç–∏—Ç—å" –¥–æ–±–∞–≤–ª–µ–Ω');
    } else {
        console.error('‚ùå –ö–Ω–æ–ø–∫–∞ "–û—á–∏—Å—Ç–∏—Ç—å" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }
    
    if (copyConsoleBtn) {
        copyConsoleBtn.addEventListener('click', copyConsoleOutput);
        console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å" –¥–æ–±–∞–≤–ª–µ–Ω');
    } else {
        console.error('‚ùå –ö–Ω–æ–ø–∫–∞ "–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }

    // –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–º
    const installServiceBtn = document.getElementById('installServiceBtn');
    const uninstallServiceBtn = document.getElementById('uninstallServiceBtn');
    const startServiceBtn = document.getElementById('startServiceBtn');
    const stopServiceBtn = document.getElementById('stopServiceBtn');
    const refreshStatusBtn = document.getElementById('refreshStatusBtn');
    
    if (installServiceBtn) {
        installServiceBtn.addEventListener('click', installService);
        console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–∏—Å" –¥–æ–±–∞–≤–ª–µ–Ω');
    } else {
        console.error('‚ùå –ö–Ω–æ–ø–∫–∞ "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–∏—Å" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }
    
    if (uninstallServiceBtn) {
        uninstallServiceBtn.addEventListener('click', uninstallService);
        console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–£–¥–∞–ª–∏—Ç—å —Å–µ—Ä–≤–∏—Å" –¥–æ–±–∞–≤–ª–µ–Ω');
    } else {
        console.error('‚ùå –ö–Ω–æ–ø–∫–∞ "–£–¥–∞–ª–∏—Ç—å —Å–µ—Ä–≤–∏—Å" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }
    
    if (startServiceBtn) {
        startServiceBtn.addEventListener('click', startService);
        console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å" –¥–æ–±–∞–≤–ª–µ–Ω');
    } else {
        console.error('‚ùå –ö–Ω–æ–ø–∫–∞ "–ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }
    
    if (stopServiceBtn) {
        stopServiceBtn.addEventListener('click', stopService);
        console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–∏—Å" –¥–æ–±–∞–≤–ª–µ–Ω');
    } else {
        console.error('‚ùå –ö–Ω–æ–ø–∫–∞ "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–∏—Å" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }
    
    if (refreshStatusBtn) {
        refreshStatusBtn.addEventListener('click', updateServiceStatus);
        console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å" –¥–æ–±–∞–≤–ª–µ–Ω');
    } else {
        console.error('‚ùå –ö–Ω–æ–ø–∫–∞ "–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π
    const endpoint = document.getElementById('endpoint');
    const username = document.getElementById('username');
    const password = document.getElementById('password');
    const logLevel = document.getElementById('logLevel');
    
    if (endpoint) {
        endpoint.addEventListener('input', updateConfigFromUI);
        console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—è "endpoint" –¥–æ–±–∞–≤–ª–µ–Ω');
    }
    
    if (username) {
        username.addEventListener('input', updateConfigFromUI);
        console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—è "username" –¥–æ–±–∞–≤–ª–µ–Ω');
    }
    
    if (password) {
        password.addEventListener('input', updateConfigFromUI);
        console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—è "password" –¥–æ–±–∞–≤–ª–µ–Ω');
    }
    
    if (logLevel) {
        logLevel.addEventListener('change', updateConfigFromUI);
        console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—è "logLevel" –¥–æ–±–∞–≤–ª–µ–Ω');
    }
    
    console.log('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
function switchTab(tabName) {
    // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Å–æ –≤—Å–µ—Ö –≤–∫–ª–∞–¥–æ–∫
    document.querySelectorAll('.tab-button').forEach(btn => btn.classList.remove('active'));
    document.querySelectorAll('.tab-content').forEach(content => content.classList.remove('active'));

    // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –≤–∫–ª–∞–¥–∫—É
    document.querySelector(`[data-tab="${tabName}"]`).classList.add('active');
    document.getElementById(`${tabName}-tab`).classList.add('active');
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
async function loadCurrentConfig() {
    try {
        const configData = await GetConfig();
        currentConfig = JSON.parse(configData);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º UI
        updateUIFromConfig();
        
        // –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        if (isInitialized) {
            logToConsole('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:', error);
        logToConsole(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: ${error.message}`);
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
function updateUIFromConfig() {
    if (!currentConfig || !currentConfig.proxies || currentConfig.proxies.length === 0) {
        return;
    }

    const proxy = currentConfig.proxies[0];
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—è –ø—Ä–æ–∫—Å–∏
    document.getElementById('endpoint').value = proxy.socks5ProxyEndpoint || '';
    document.getElementById('username').value = proxy.username || '';
    document.getElementById('password').value = proxy.password || '';
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    const logLevelSelect = document.getElementById('logLevel');
    const logLevel = currentConfig.logLevel || 'Error';
    for (let i = 0; i < logLevelSelect.options.length; i++) {
        if (logLevelSelect.options[i].value === logLevel) {
            logLevelSelect.selectedIndex = i;
            break;
        }
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
    currentApps = proxy.appNames || [];
    updateAppsDisplay();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ UI
function updateConfigFromUI() {
    if (!currentConfig) {
        currentConfig = {
            logLevel: "Error",
            proxies: [{
                appNames: [],
                socks5ProxyEndpoint: "",
                username: "",
                password: "",
                supportedProtocols: ["TCP", "UDP"]
            }]
        };
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∫—Å–∏
    currentConfig.logLevel = document.getElementById('logLevel').value;
    
    if (!currentConfig.proxies) {
        currentConfig.proxies = [{}];
    }
    
    const proxy = currentConfig.proxies[0];
    proxy.socks5ProxyEndpoint = document.getElementById('endpoint').value;
    proxy.username = document.getElementById('username').value;
    proxy.password = document.getElementById('password').value;
    proxy.appNames = currentApps;
    
    if (!proxy.supportedProtocols) {
        proxy.supportedProtocols = ["TCP", "UDP"];
    }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
async function saveConfiguration() {
    try {
        updateConfigFromUI();
        
        const configData = JSON.stringify(currentConfig);
        await SaveConfig(configData);
        
        logToConsole('üíæ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞');
        showNotification('–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!', 'success');
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', error);
        
        // –£–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
        const errorMessage = getErrorMessage(error);
        console.log('üìù –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', errorMessage);
        logToConsole(`‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ${errorMessage}`);
        showNotification(`–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ${errorMessage}`, 'error');
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
function updateAppsDisplay() {
    const appsList = document.getElementById('appsList');
    appsList.innerHTML = '';
    
    currentApps.forEach((app, index) => {
        const appItem = document.createElement('div');
        appItem.className = 'app-item';
        
        // –°–æ–∑–¥–∞–µ–º span —Å –∏–º–µ–Ω–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        const appSpan = document.createElement('span');
        appSpan.textContent = `‚Ä¢ ${app}`;
        
        // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —É–¥–∞–ª–µ–Ω–∏—è
        const removeBtn = document.createElement('button');
        removeBtn.className = 'btn btn-danger btn-sm';
        removeBtn.textContent = '‚úï';
        removeBtn.setAttribute('data-index', index);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è
        removeBtn.addEventListener('click', function() {
            const buttonIndex = parseInt(this.getAttribute('data-index'));
            console.log('üîÑ –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ —É–¥–∞–ª–µ–Ω–∏—è, –∏–Ω–¥–µ–∫—Å:', buttonIndex);
            removeAppByIndex(buttonIndex);
        });
        
        // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≤ appItem
        appItem.appendChild(appSpan);
        appItem.appendChild(removeBtn);
        
        appsList.appendChild(appItem);
    });
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
async function addApplication() {
    console.log('üîÑ –§—É–Ω–∫—Ü–∏—è addApplication –≤—ã–∑–≤–∞–Ω–∞');
    try {
        // –°–æ–∑–¥–∞–µ–º —Å–∫—Ä—ã—Ç—ã–π input –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
        const fileInput = document.createElement('input');
        fileInput.type = 'file';
        fileInput.accept = '.exe,.msi,.bat,.cmd,.com'; // –ü—Ä–∏–Ω–∏–º–∞–µ–º –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–µ —Ñ–∞–π–ª—ã
        fileInput.style.display = 'none';
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
        fileInput.onchange = function(event) {
            const file = event.target.files[0];
            if (file) {
                const fileName = file.name;
                console.log('üìÅ –í—ã–±—Ä–∞–Ω —Ñ–∞–π–ª:', fileName);
                
                if (!currentApps.includes(fileName)) {
                    currentApps.push(fileName);
                    console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –º–∞—Å—Å–∏–≤:', fileName);
                    updateAppsDisplay();
                    updateConfigFromUI();
                    logToConsole(`‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ '${fileName}' –¥–æ–±–∞–≤–ª–µ–Ω–æ`);
                    showNotification(`–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ '${fileName}' –¥–æ–±–∞–≤–ª–µ–Ω–æ!`, 'success');
                } else {
                    console.log('‚ö†Ô∏è –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Å–ø–∏—Å–∫–µ');
                    showNotification('–≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Å–ø–∏—Å–æ–∫!', 'warning');
                }
            }
            
            // –û—á–∏—â–∞–µ–º input –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ —Ç–æ–≥–æ –∂–µ —Ñ–∞–π–ª–∞
            fileInput.value = '';
        };
        
        // –î–æ–±–∞–≤–ª—è–µ–º input –≤ DOM –∏ –≤—ã–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
        document.body.appendChild(fileInput);
        fileInput.click();
        
        // –£–¥–∞–ª—è–µ–º input –∏–∑ DOM –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        setTimeout(() => {
            if (fileInput.parentNode) {
                fileInput.parentNode.removeChild(fileInput);
            }
        }, 1000);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤ addApplication:', error);
        logToConsole(`‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: ${error.message}`);
    }
}



// –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø–æ –∏–Ω–¥–µ–∫—Å—É
function removeAppByIndex(index) {
    console.log('üîÑ –§—É–Ω–∫—Ü–∏—è removeAppByIndex –≤—ã–∑–≤–∞–Ω–∞ —Å –∏–Ω–¥–µ–∫—Å–æ–º:', index);
    
    if (index >= 0 && index < currentApps.length) {
        const appName = currentApps[index];
        console.log('üìù –£–¥–∞–ª—è—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:', appName);
        
        currentApps.splice(index, 1);
        updateAppsDisplay();
        updateConfigFromUI();
        
        logToConsole(`‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ '${appName}' —É–¥–∞–ª–µ–Ω–æ`);
        showNotification(`–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ '${appName}' —É–¥–∞–ª–µ–Ω–æ!`, 'success');
        
        console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ –∏–∑ –º–∞—Å—Å–∏–≤–∞');
    } else {
        console.error('‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∏–Ω–¥–µ–∫—Å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:', index);
        showNotification('–û—à–∏–±–∫–∞: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∏–Ω–¥–µ–∫—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è!', 'error');
    }
}

// –ó–∞–ø—É—Å–∫ ProxiFyre
async function runProxiFyre() {
    console.log('üîÑ –§—É–Ω–∫—Ü–∏—è runProxiFyre –≤—ã–∑–≤–∞–Ω–∞');
    try {
        logToConsole('üöÄ –ó–∞–ø—É—Å–∫ ProxiFyre...');
        console.log('üìû –í—ã–∑—ã–≤–∞—é RunProxiFyre() –∏–∑ Go backend...');
        
        await RunProxiFyre();
        
        console.log('‚úÖ RunProxiFyre() –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ');
        logToConsole('‚úÖ ProxiFyre –∑–∞–ø—É—â–µ–Ω!');
        showNotification('ProxiFyre —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!', 'success');
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤ runProxiFyre:', error);
        
        // –£–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
        const errorMessage = getErrorMessage(error);
        console.log('üìù –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', errorMessage);
        logToConsole(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: ${errorMessage}`);
        showNotification(`–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: ${errorMessage}`, 'error');
    }
}

// –û—Å—Ç–∞–Ω–æ–≤–∫–∞ ProxiFyre
async function stopProxiFyre() {
    console.log('üîÑ –§—É–Ω–∫—Ü–∏—è stopProxiFyre –≤—ã–∑–≤–∞–Ω–∞');
    try {
        logToConsole('üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ ProxiFyre...');
        console.log('üìû –í—ã–∑—ã–≤–∞—é StopProxiFyre() –∏–∑ Go backend...');
        
        await StopProxiFyre();
        
        console.log('‚úÖ StopProxiFyre() –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ');
        logToConsole('‚úÖ ProxiFyre –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!');
        showNotification('ProxiFyre —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!', 'success');
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤ stopProxiFyre:', error);
        
        // –£–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
        const errorMessage = getErrorMessage(error);
        console.log('üìù –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', errorMessage);
        logToConsole(`‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: ${errorMessage}`);
        showNotification(`–û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: ${errorMessage}`, 'error');
    }
}

// –°–∫–∞—á–∏–≤–∞–Ω–∏–µ ProxiFyre
async function downloadProxiFyre() {
    console.log('üîÑ –§—É–Ω–∫—Ü–∏—è downloadProxiFyre –≤—ã–∑–≤–∞–Ω–∞');
    try {
        logToConsole('‚¨áÔ∏è –ù–∞—á–∏–Ω–∞—é –∑–∞–≥—Ä—É–∑–∫—É ProxiFyre...');
        console.log('üìû –í—ã–∑—ã–≤–∞—é DownloadProxiFyre() –∏–∑ Go backend...');
        
        await DownloadProxiFyre();
        
        console.log('‚úÖ DownloadProxiFyre() –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ');
        logToConsole('‚úÖ ProxiFyre –∑–∞–≥—Ä—É–∂–µ–Ω!');
        showNotification('ProxiFyre —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!', 'success');
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤ downloadProxiFyre:', error);
        
        // –£–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
        const errorMessage = getErrorMessage(error);
        console.log('üìù –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', errorMessage);
        logToConsole(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${errorMessage}`);
        showNotification(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${errorMessage}`, 'error');
    }
}

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞
async function installService() {
    try {
        logToConsole('üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ ProxiFyre...');
        
        await InstallService();
        
        logToConsole('‚úÖ –°–µ—Ä–≤–∏—Å ProxiFyre —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!');
        showNotification('–°–µ—Ä–≤–∏—Å ProxiFyre —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!', 'success');
        await updateServiceStatus();
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–∏—Å–∞:', error);
        logToConsole(`‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–∏—Å–∞: ${error.message}`);
        showNotification(`–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–∏—Å–∞: ${error.message}`, 'error');
    }
}

// –£–¥–∞–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞
async function uninstallService() {
    try {
        logToConsole('üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ ProxiFyre...');
        
        await UninstallService();
        
        logToConsole('‚úÖ –°–µ—Ä–≤–∏—Å ProxiFyre —É–¥–∞–ª–µ–Ω!');
        showNotification('–°–µ—Ä–≤–∏—Å ProxiFyre —É–¥–∞–ª–µ–Ω!', 'success');
        await updateServiceStatus();
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞:', error);
        logToConsole(`‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞: ${error.message}`);
        showNotification(`–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞: ${error.message}`, 'error');
    }
}

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞
async function startService() {
    try {
        logToConsole('‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞ ProxiFyre...');
        
        await StartService();
        
        logToConsole('‚úÖ –°–µ—Ä–≤–∏—Å ProxiFyre –∑–∞–ø—É—â–µ–Ω!');
        showNotification('–°–µ—Ä–≤–∏—Å ProxiFyre –∑–∞–ø—É—â–µ–Ω!', 'success');
        await updateServiceStatus();
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞:', error);
        logToConsole(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞: ${error.message}`);
        showNotification(`–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞: ${error.message}`, 'error');
    }
}

// –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞
async function stopService() {
    try {
        logToConsole('‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ ProxiFyre...');
        
        await StopService();
        
        logToConsole('‚úÖ –°–µ—Ä–≤–∏—Å ProxiFyre –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!');
        showNotification('–°–µ—Ä–≤–∏—Å ProxiFyre –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!', 'success');
        await updateServiceStatus();
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–∏—Å–∞:', error);
        logToConsole(`‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–∏—Å–∞: ${error.message}`);
        showNotification(`–û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–∏—Å–∞: ${error.message}`, 'error');
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞
async function updateServiceStatus() {
    try {
        const status = await GetServiceStatus();
        const statusElement = document.getElementById('serviceStatus');
        
        statusElement.textContent = `–°—Ç–∞—Ç—É—Å: ${status}`;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ü–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
        statusElement.className = '';
        if (status.includes('–ó–∞–ø—É—â–µ–Ω')) {
            statusElement.style.color = 'green';
            statusElement.style.fontWeight = 'bold';
        } else if (status.includes('–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')) {
            statusElement.style.color = 'red';
            statusElement.style.fontWeight = 'bold';
        } else if (status.includes('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')) {
            statusElement.style.color = 'orange';
            statusElement.style.fontWeight = 'bold';
        } else {
            statusElement.style.color = 'gray';
        }
        
        logToConsole(`üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞ –æ–±–Ω–æ–≤–ª–µ–Ω: ${status}`);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞:', error);
        logToConsole(`‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞: ${error.message}`);
    }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ ProxiFyre
async function checkProxiFyreStatus() {
    try {
        const exists = await CheckProxiFyreExists();
        if (exists) {
            // –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
            if (isInitialized) {
                logToConsole('‚úÖ ProxiFyre.exe –Ω–∞–π–¥–µ–Ω –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏');
            }
        } else {
            logToConsole('‚ö†Ô∏è ProxiFyre.exe –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ ProxiFyre:', error);
        logToConsole(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ ProxiFyre: ${error.message}`);
    }
}

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å
function logToConsole(message) {
    const console = document.getElementById('console');
    const timestamp = new Date().toLocaleTimeString();
    const logEntry = document.createElement('div');
    logEntry.innerHTML = `[${timestamp}] ${message}`;
    console.appendChild(logEntry);
    
    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –∫–æ–Ω—Ü—É
    console.scrollTop = console.scrollHeight;
}

// –û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Å–æ–ª–∏
function clearConsole() {
    document.getElementById('console').innerHTML = '';
    logToConsole('üßπ –ö–æ–Ω—Å–æ–ª—å –æ—á–∏—â–µ–Ω–∞');
}

// –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–æ–Ω—Å–æ–ª–∏
function copyConsoleOutput() {
    const console = document.getElementById('console');
    const text = console.innerText;
    
    navigator.clipboard.writeText(text).then(() => {
        showNotification('–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ–Ω—Å–æ–ª–∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!', 'success');
    }).catch(() => {
        showNotification('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ–Ω—Å–æ–ª–∏', 'error');
    });
}

// –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function showNotification(message, type = 'info') {
    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    const notification = document.createElement('div');
    notification.className = `notification notification-${type}`;
    notification.textContent = message;
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        padding: 15px 20px;
        border-radius: 8px;
        color: white;
        font-weight: 600;
        z-index: 1000;
        animation: slideIn 0.3s ease-out;
        max-width: 300px;
    `;
    
    // –¶–≤–µ—Ç–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤
    switch (type) {
        case 'success':
            notification.style.backgroundColor = '#28a745';
            break;
        case 'error':
            notification.style.backgroundColor = '#dc3545';
            break;
        case 'warning':
            notification.style.backgroundColor = '#ffc107';
            notification.style.color = '#333';
            break;
        default:
            notification.style.backgroundColor = '#007bff';
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ DOM
    document.body.appendChild(notification);
    
    // –£–¥–∞–ª—è–µ–º —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
        notification.style.animation = 'slideOut 0.3s ease-out';
        setTimeout(() => {
            if (notification.parentNode) {
                notification.parentNode.removeChild(notification);
            }
        }, 300);
    }, 3000);
}

// –î–æ–±–∞–≤–ª—è–µ–º CSS –∞–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
const style = document.createElement('style');
style.textContent = `
    @keyframes slideIn {
        from { transform: translateX(100%); opacity: 0; }
        to { transform: translateX(0); opacity: 1; }
    }
    
    @keyframes slideOut {
        from { transform: translateX(0); opacity: 1; }
        to { transform: translateX(100%); opacity: 0; }
    }
`;
document.head.appendChild(style);

// –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞ –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥ - –£–ë–ò–†–ê–ï–ú
// setInterval(updateServiceStatus, 10000);

// –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
//logToConsole('üöÄ ProxiFyre Configuration Editor –∑–∞–ø—É—â–µ–Ω');
